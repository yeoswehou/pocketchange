name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres-test:
        image: postgres
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: pocketchangetest
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres-integration:
        image: postgres
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: pocketchangeintegration
        ports:
          - 5434:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      TEST_DATABASE_URL: postgresql://username:password@localhost:5433/pocketchangetest
      INTEGRATION_DATABASE_URL: postgresql://username:password@localhost:5434/pocketchangeintegration

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Wait for Test PostgreSQL
        run: until pg_isready -h localhost -p 5433; do sleep 2; done

      - name: Wait for Integration PostgreSQL
        run: until pg_isready -h localhost -p 5434; do sleep 2; done

      - name: Check formatting
        run: |
          rustup component add rustfmt
          cargo fmt -- --check

      - name: Clippy
        run: |
          rustup component add clippy
          cargo clippy -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Install sea-orm-cli
        run: cargo install sea-orm-cli

      - name: Run migrations for test database
        run: sea-orm-cli migrate up -u ${{ env.TEST_DATABASE_URL }}

      - name: Run migrations for integration database
        run: sea-orm-cli migrate up -u ${{ env.INTEGRATION_DATABASE_URL }}

      - name: Run tests
        run: cargo test --verbose -- --test-threads=1
        env:
          DATABASE_URL: ${{ env.TEST_DATABASE_URL }}
          INTEGRATION_DATABASE_URL: ${{ env.INTEGRATION_DATABASE_URL }}
